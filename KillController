package controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class KillController {

    // Método que identifica o Sistema Operacional (privado)
    private String os() {
        return System.getProperty("os.name").toLowerCase();
    }

    // Método que lista os processos ativos
    public void listaProcessos() {
        String so = os();
        String command = "";

        try {
            if (so.contains("win")) {
                command = "TASKLIST /FO TABLE";
            } else if (so.contains("nix") || so.contains("nux") || so.contains("mac")) {
                command = "ps -ef";
            }

            Process process = Runtime.getRuntime().exec(command);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Método que mata um processo pelo PID
    public void mataPid(int pid) {
        String so = os();
        String command = "";

        try {
            if (so.contains("win")) {
                command = "TASKKILL /PID " + pid;
            } else if (so.contains("nix") || so.contains("nux") || so.contains("mac")) {
                command = "kill -9 " + pid;
            }

            Runtime.getRuntime().exec(command);
            System.out.println("Processo " + pid + " finalizado.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Método que mata um processo pelo nome
    public void mataNome(String nome) {
        String so = os();
        String command = "";

        try {
            if (so.contains("win")) {
                command = "TASKKILL /IM " + nome;
            } else if (so.contains("nix") || so.contains("nux") || so.contains("mac")) {
                command = "pkill -f " + nome;
            }

            Runtime.getRuntime().exec(command);
            System.out.println("Processo " + nome + " finalizado.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
